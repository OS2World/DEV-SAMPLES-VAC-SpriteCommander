/*******************************************************************************
* FILE NAME: SpriteCommander.cpp                                               *
*                                                                              *
* DESCRIPTION:                                                                 *
*   Class implementation of the class:                                         *
*     SpriteCommander- Passes commands to the selected sprite                  *
* ---------------------------------------------------------------------------- *
* Warning: This file was generated by the VisualAge C++ Visual Builder.        *
* Modifications to this source file will be lost when the part is regenerated. *
*******************************************************************************/
#ifndef _INOTIFEV_
#include <inotifev.hpp>
#endif

#ifndef _IOBSERVR_
#include <iobservr.hpp>
#endif

#ifndef _ISTDNTFY_
#include <istdntfy.hpp>
#endif

#ifndef _SPRITECOMMANDER_
#include "SpriteCommander.hpp"
#endif

#ifndef _IVBDEFS_
#include <ivbdefs.h>
#endif

#ifndef _ITRACE_
#include <itrace.hpp>
#endif


#pragma export (SpriteCommander::readyId)
const INotificationId SpriteCommander::readyId = "SpriteCommander::readyId";
//------------------------------------------------------------------------------
// SpriteCommander :: SpriteCommander
//------------------------------------------------------------------------------
#pragma export (SpriteCommander::SpriteCommander())
SpriteCommander::SpriteCommander()
{

}     //end constructor


//------------------------------------------------------------------------------
// SpriteCommander :: ~SpriteCommander
//------------------------------------------------------------------------------
#pragma export (SpriteCommander::~SpriteCommander())
SpriteCommander::~SpriteCommander()
{

}

//------------------------------------------------------------------------------
// SpriteCommander :: initializePart
//------------------------------------------------------------------------------
#pragma export (SpriteCommander::initializePart())
SpriteCommander & SpriteCommander::initializePart()
{
   makeConnections();
   notifyObservers(INotificationEvent(readyId, *this));
   return *this;
}


//------------------------------------------------------------------------------
// SpriteCommander :: makeConnections
//------------------------------------------------------------------------------
#pragma export (SpriteCommander::makeConnections())
Boolean SpriteCommander::makeConnections()
{
   this->enableNotification();

   return true;
}


#include "SpriteCommander.cpv"
