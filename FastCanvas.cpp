/*******************************************************************************
* FILE NAME: FastCanvas.cpp                                                    *
*                                                                              *
* DESCRIPTION:                                                                 *
*   Class implementation of the class:                                         *
*     FastCanvas- A high-performance drawing canvas                            *
* ---------------------------------------------------------------------------- *
* Warning: This file was generated by the VisualAge C++ Visual Builder.        *
* Modifications to this source file will be lost when the part is regenerated. *
*******************************************************************************/
#ifndef _ICANVAS_
#include <icanvas.hpp>
#endif

#ifndef _IPOINT_
#include <ipoint.hpp>
#endif

#ifndef _INOTIFEV_
#include <inotifev.hpp>
#endif

#ifndef _IOBSERVR_
#include <iobservr.hpp>
#endif

#ifndef _ISTDNTFY_
#include <istdntfy.hpp>
#endif

#ifndef _FASTCANVAS_
#include "FastCanvas.hpp"
#endif

#ifndef _IVBDEFS_
#include <ivbdefs.h>
#endif

#ifndef _ITRACE_
#include <itrace.hpp>
#endif


#pragma export (FastCanvas::readyId)
const INotificationId FastCanvas::readyId = "FastCanvas::readyId";

//------------------------------------------------------------------------------
// FastCanvas :: defaultFramingSpec
//------------------------------------------------------------------------------
#pragma export (FastCanvas::defaultFramingSpec())
IRectangle FastCanvas::defaultFramingSpec()
{
   return(IRectangle(IPoint(30,109),ISize(400, 300)));
}


//------------------------------------------------------------------------------
// FastCanvas :: FastCanvas
//------------------------------------------------------------------------------
#pragma export (FastCanvas::FastCanvas(unsigned long, IWindow *, IWindow *, const IRectangle &, const ICanvas::Style &))
FastCanvas::FastCanvas(
      unsigned long id, 
      IWindow * parent, 
      IWindow * owner, 
      const IRectangle & rect, 
      const ICanvas::Style & style)
   : ICanvas(id, parent, owner, rect, style)
{

   this->setMinimumSize(ISize(400, 300));
}     //end constructor


//------------------------------------------------------------------------------
// FastCanvas :: ~FastCanvas
//------------------------------------------------------------------------------
#pragma export (FastCanvas::~FastCanvas())
FastCanvas::~FastCanvas()
{

}

//------------------------------------------------------------------------------
// FastCanvas :: initializePart
//------------------------------------------------------------------------------
#pragma export (FastCanvas::initializePart())
FastCanvas & FastCanvas::initializePart()
{
   makeConnections();
   notifyObservers(INotificationEvent(readyId, *this));
   return *this;
}


//------------------------------------------------------------------------------
// FastCanvas :: makeConnections
//------------------------------------------------------------------------------
#pragma export (FastCanvas::makeConnections())
Boolean FastCanvas::makeConnections()
{
   this->enableNotification();

   unsigned long id = this->id();
   return true;
}



#include "FastCanvas.cpv"
