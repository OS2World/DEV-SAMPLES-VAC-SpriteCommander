/*******************************************************************************
* FILE NAME: SpriteCommander.hpp                                               *
*                                                                              *
* DESCRIPTION:                                                                 *
*   Declaration of the class:                                                  *
*     SpriteCommander- Passes commands to the selected sprite                  *
* ---------------------------------------------------------------------------- *
* Warning: This file was generated by the VisualAge C++ Visual Builder.        *
* Modifications to this source file will be lost when the part is regenerated. *
*******************************************************************************/
#ifndef _SPRITECOMMANDER_
#define _SPRITECOMMANDER_  

class SpriteCommander;

#ifndef _ISTDNTFY_
#include <istdntfy.hpp>
#endif

#include "ivseq.h"

#include "sprite.hpp"

#include "spritedetails.hpp"

#include "SpriteCommander.h"


/*----------------------------------------------------------------------------*/
/* Align classes on four byte boundary.                                       */
/*----------------------------------------------------------------------------*/
#pragma pack(4)

//*****************************************************************************
// Class definition for SpriteCommander
//*****************************************************************************
class SpriteCommander : public IStandardNotifier {
public:
   //---------------------------------------------------------------------------
   // Constructors / destructors
   //---------------------------------------------------------------------------
   SpriteCommander();

   virtual  ~SpriteCommander();

   //---------------------------------------------------------------------------
   // public member functions
   //---------------------------------------------------------------------------
   virtual SpriteCommander & initializePart();

   //---------------------------------------------------------------------------
   // public member data
   //---------------------------------------------------------------------------
   static const INotificationId readyId;

protected:
   //---------------------------------------------------------------------------
   // protected member functions
   //---------------------------------------------------------------------------
   virtual Boolean makeConnections();

private:

#include "SpriteCommander.hpv"
};   //SpriteCommander


/*----------------------------------------------------------------------------*/
/* Resume compiler default packing.                                           */
/*----------------------------------------------------------------------------*/
#pragma pack()

#endif
